// –ö–æ–¥ –¥–ª—è –ø–ª–∞–≤–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
// document.querySelectorAll('a[href^="#"]').forEach(anchor => { ... });

// --- –ú–∏–Ω–∏-–ò–≥—Ä–∞ "–ö–æ—Ç–∏–∫ –∏ –ö—Ä–µ–≤–µ—Ç–∫–∏" ---

// –ò–≥—Ä–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã DOM
const gameArea = document.getElementById('game-area');
const catImage = document.getElementById('cat-image'); // –¢–µ–ø–µ—Ä—å —ç—Ç–æ img
const catPaw = document.getElementById('cat-paw-image'); // –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π ID –∏ —Ç–µ–ø–µ—Ä—å —ç—Ç–æ img
const scoreDisplay = document.getElementById('score');
const gameOverMessage = document.getElementById('game-over-message');
const restartButton = document.getElementById('restart-button');
const actionButton = document.getElementById('action-button');
// const catSadImage = document.getElementById('cat-sad-placeholder'); // –∏–ª–∏ cat-sad-image –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º img

// –ò–≥—Ä–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let score = 0;
let gameInterval;
let objects = []; // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è "–ø—Ä–æ–ø–ª—ã–≤–∞—é—â–∏—Ö" –æ–±—ä–µ–∫—Ç–æ–≤
let gameSpeed = 5; // –°–∫–æ—Ä–æ—Å—Ç—å –¥–≤–∏–∂–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ (–ø–∏–∫—Å–µ–ª–µ–π –∑–∞ –∫–∞–¥—Ä)
let objectCreationInterval = 3500; // –ò–Ω—Ç–µ—Ä–≤–∞–ª —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ (–º—Å)
let isGameOver = false;
let isAttacking = false; // –§–ª–∞–≥, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ–µ –±—ã—Å—Ç—Ä–æ–µ –Ω–∞–∂–∞—Ç–∏–µ

// --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã ---
function initGame() {
    isGameOver = false;
    score = 0;
    updateScoreDisplay();
    gameOverMessage.style.display = 'none';
    actionButton.disabled = false;
    objects.forEach(obj => obj.element.remove()); // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—ä–µ–∫—Ç—ã
    objects = [];
    
    // –°–±—Ä–æ—Å –ø–æ–ª–æ–∂–µ–Ω–∏—è –ª–∞–ø–∫–∏, –µ—Å–ª–∏ –æ–Ω–æ –º–µ–Ω—è–ª–æ—Å—å –Ω–µ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∫–ª–∞—Å—Å
    if (catPaw) {
        catPaw.classList.remove('attacking');
    }
    // catImage.src = 'assets/cat_normal.png'; // –í–µ—Ä–Ω—É—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ –∫–æ—Ç–∞

    startGameLoop();
}

// --- –ò–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª --- 
function startGameLoop() {
    if (gameInterval) clearInterval(gameInterval);
    gameInterval = setInterval(() => {
        if (isGameOver) {
            clearInterval(gameInterval);
            return;
        }
        moveObjects();
        //createRandomObject(); // –ü–æ–∫–∞ –Ω–µ –≤—ã–∑—ã–≤–∞–µ–º, —Å–æ–∑–¥–∞–¥–∏–º –≤—Ä—É—á–Ω—É—é –¥–ª—è —Ç–µ—Å—Ç–∞
    }, 50); // –ß–∞—Å—Ç–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è (–º—Å)

    // –û—Ç–¥–µ–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤
    if (objectCreatorInterval) clearInterval(objectCreatorInterval);
    objectCreatorInterval = setInterval(createRandomObject, objectCreationInterval);
}
let objectCreatorInterval; // –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤

// --- –î–µ–π—Å—Ç–≤–∏–µ: –£–¥–∞—Ä –ª–∞–ø–∫–æ–π ---
function pawAttack() {
    if (isGameOver || isAttacking || !catPaw || !cat) return;

    isAttacking = true;
    catPaw.classList.add('attacking');

    // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–∞—è –¥–ª–∏–Ω–∞ "–≤—ã—Ç—è–Ω—É—Ç–æ–π" –ª–∞–ø—ã –æ—Ç –µ–µ —Ç–æ—á–∫–∏ –≤—Ä–∞—â–µ–Ω–∏—è (top center)
    // –≠—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–¥–æ–±—Ä–∞—Ç—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ!
    const pawReach = 80; // –ù–∞–ø—Ä–∏–º–µ—Ä, 80px
    // –£–≥–æ–ª –∞—Ç–∞–∫–∏ –ª–∞–ø—ã –≤ —Ä–∞–¥–∏–∞–Ω–∞—Ö (70 –≥—Ä–∞–¥—É—Å–æ–≤)
    const attackAngle = 70 * Math.PI / 180;

    // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã "–∫–æ–Ω—á–∏–∫–∞" –ª–∞–ø—ã –≤ –º–æ–º–µ–Ω—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —É–¥–∞—Ä–∞
    // –¶–µ–Ω—Ç—Ä –∫–æ—Ç–∞ –ø–æ X: cat.offsetLeft + cat.offsetWidth / 2
    // –°–º–µ—â–µ–Ω–∏–µ –ª–∞–ø—ã –æ—Ç —Ü–µ–Ω—Ç—Ä–∞ –∫–æ—Ç–∞ –ø–æ X –ø—Ä–∏–º–µ—Ä–Ω–æ 0, —Ç.–∫. translateX(-50%)
    // –ù–∞—á–∞–ª–æ –ª–∞–ø—ã –ø–æ Y: cat.offsetTop + catPaw.offsetTop (–æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ gameArea)
    const pawPivotX = cat.offsetLeft + (cat.offsetWidth / 2) + (catPaw.offsetLeft + catPaw.offsetWidth / 2 - cat.offsetWidth / 2); // X —Ç–æ—á–∫–∏ –≤—Ä–∞—â–µ–Ω–∏—è –ª–∞–ø—ã
    const pawPivotY = cat.offsetTop + catPaw.offsetTop;

    const pawTipX = pawPivotX + pawReach * Math.sin(attackAngle); // X –∫–æ–Ω—á–∏–∫–∞ –ª–∞–ø—ã
    const pawTipY = pawPivotY + pawReach * Math.cos(attackAngle); // Y –∫–æ–Ω—á–∏–∫–∞ –ª–∞–ø—ã

    objects.forEach(obj => {
        if (!obj.hit) { 
            const objRect = obj.element.getBoundingClientRect();
            const gameAreaRect = gameArea.getBoundingClientRect();

            const objLeft = objRect.left - gameAreaRect.left;
            const objRight = objRect.right - gameAreaRect.left;
            const objTop = objRect.top - gameAreaRect.top;
            const objBottom = objRect.bottom - gameAreaRect.top;

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ø–∞–¥–∞–Ω–∏—è: –∫–æ–Ω—á–∏–∫ –ª–∞–ø—ã (pawTipX, pawTipY) –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–Ω—É—Ç—Ä–∏ –æ–±—ä–µ–∫—Ç–∞
            if (pawTipX >= objLeft && pawTipX <= objRight &&
                pawTipY >= objTop && pawTipY <= objBottom) {
                handleHit(obj);
            }
        }
    });

    setTimeout(() => {
        catPaw.classList.remove('attacking');
        isAttacking = false;
    }, 150); 
}

// --- –°–æ–∑–¥–∞–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ (–∫—Ä–µ–≤–µ—Ç–∫–∞/–∫–æ–Ω—Ñ–µ—Ç–∫–∞) ---
function createRandomObject() {
    if (isGameOver || !gameArea) return;

    const type = Math.random() < 0.6 ? 'shrimp' : 'candy'; 
    const objectElement = document.createElement('div');
    objectElement.classList.add('game-object', type);
    objectElement.textContent = type === 'shrimp' ? 'ü¶ê' : 'üç¨'; 

    // –ù–∞—á–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ: —Å–ø—Ä–∞–≤–∞ –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ gameArea, Y —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω —Å–Ω–∏–∑—É CSS-–æ–º (bottom: 10px)
    objectElement.style.right = '-50px'; 
    // objectElement.style.bottom = '10px'; // –£–∂–µ –∑–∞–¥–∞–Ω–æ –≤ CSS, –Ω–æ –º–æ–∂–Ω–æ –∏ —Ç—É—Ç –¥–ª—è —è—Å–Ω–æ—Å—Ç–∏
    // –£–¥–∞–ª—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É top, —Ç–∞–∫ –∫–∞–∫ —Ç–µ–ø–µ—Ä—å –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –ø–æ bottom
    // const randomTop = Math.random() * (gameArea.clientHeight - 80 - 50) + 50; 
    // objectElement.style.top = `${randomTop}px`;

gameArea.appendChild(objectElement);
    objects.push({ element: objectElement, type: type, hit: false });
}

// --- –î–≤–∏–∂–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ ---
function moveObjects() {
    objects = objects.filter(obj => {
        let currentRight = parseFloat(obj.element.style.right);
        currentRight += gameSpeed;
        obj.element.style.right = `${currentRight}px`;

        // –£–¥–∞–ª—è–µ–º –æ–±—ä–µ–∫—Ç, –µ—Å–ª–∏ –æ–Ω —É—à–µ–ª –¥–∞–ª–µ–∫–æ –∑–∞ –ª–µ–≤—ã–π –∫—Ä–∞–π
        if (currentRight > gameArea.offsetWidth + 50) { 
            obj.element.remove();
            return false; // –£–¥–∞–ª–∏—Ç—å –∏–∑ –º–∞—Å—Å–∏–≤–∞
        }
        return true; // –û—Å—Ç–∞–≤–∏—Ç—å –≤ –º–∞—Å—Å–∏–≤–µ
    });
}

// --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ø–∞–¥–∞–Ω–∏—è ---
function handleHit(object) {
    if (object.hit) return; // –£–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ
    object.hit = true; 
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —ç—Ñ—Ñ–µ–∫—Ç –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è –∏–ª–∏ –∞–Ω–∏–º–∞—Ü–∏—é "–ª–æ–≤–ª–∏"
    object.element.style.opacity = '0.5'; // –ü–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π –ø—Ä–∏ –ø–æ–ø–∞–¥–∞–Ω–∏–∏
    // object.element.remove(); // –ò–ª–∏ —Å—Ä–∞–∑—É —É–¥–∞–ª—è–µ–º

    if (object.type === 'shrimp') {
        score++;
    } else if (object.type === 'candy') {
        score--;
    }
    updateScoreDisplay();
    checkGameOver();
}

// --- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç–∞ ---
function updateScoreDisplay() {
    if(scoreDisplay) scoreDisplay.textContent = score;
}

// --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ–Ω–µ—Ü –∏–≥—Ä—ã ---
function checkGameOver() {
    if (score < 0) {
        isGameOver = true;
        if(gameOverMessage) gameOverMessage.style.display = 'block';
        if(actionButton) actionButton.disabled = true;
        // catImage.src = 'assets/cat_sad.png'; // –ü–æ–∫–∞–∑–∞—Ç—å –≥—Ä—É—Å—Ç–Ω–æ–≥–æ –∫–æ—Ç–∞
        // –∏–ª–∏ catSadPlaceholder.style.display = 'block';
        if(objectCreatorInterval) clearInterval(objectCreatorInterval); // –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    }
}

// --- –°–ª—É—à–∞—Ç–µ–ª–∏ —Å–æ–±—ã—Ç–∏–π ---
if (actionButton) {
    actionButton.addEventListener('click', pawAttack);
}
if (restartButton) {
    restartButton.addEventListener('click', initGame);
}

// --- –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ---
// –í—ã–∑—ã–≤–∞–µ–º initGame, –∫–æ–≥–¥–∞ DOM –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω
document.addEventListener('DOMContentLoaded', () => {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–µ—Ä–µ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –æ—à–∏–±–æ–∫ –Ω–∞ –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö
    if (document.getElementById('mini-game-section')) {
        initGame();
    }
});

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∫–æ—Ç–∞ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ª–∞–ø—ã (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
const cat = document.getElementById('cat'); 